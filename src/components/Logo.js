

import { useState } from 'react'

export default function Logo({ gap = 40, dx = 80, dur = 0.2, delay = 0.1, fill="#fff" }) {

	const [ isOver, setIsOver ] = useState(false)

	return (
		<svg style={{overflow: "visible"}} width="80%" height="100%" viewBox="0 0 800 109.573" xmlns="http://www.w3.org/2000/svg" onMouseEnter={e => setIsOver(true)} onMouseLeave={e => setIsOver(false)}>
			<g id="svgGroup" strokeLinecap="round" fillRule="evenodd" fontSize="9pt" stroke={fill} strokeWidth="0.25mm" fill={fill}>
				<path transform={`translate(${gap*0} 0)`} style={{transform: `${isOver ? `translateX(${dx+gap*0}px)` : ''}`, transition: `transform ${dur}s ${delay*4}s`}} d="M 84.816 53.395 L 84.816 94.264 A 33.205 33.205 0 0 1 74.331 103.14 A 43.096 43.096 0 0 1 68.776 105.69 A 58.89 58.89 0 0 1 55.618 108.931 A 77.176 77.176 0 0 1 45.485 109.572 A 50.351 50.351 0 0 1 32.112 107.856 A 42.479 42.479 0 0 1 21.754 103.493 A 40.415 40.415 0 0 1 6.001 86.45 A 48.393 48.393 0 0 1 5.824 86.098 A 54.606 54.606 0 0 1 1.069 71.33 A 72.587 72.587 0 0 1 0.002 59.694 L 0.002 51.344 A 81.667 81.667 0 0 1 1.247 36.622 Q 2.802 28.148 6.297 21.448 A 42.09 42.09 0 0 1 11.574 13.588 A 37.773 37.773 0 0 1 35.243 0.651 A 55.036 55.036 0 0 1 43.874 0.001 Q 61.671 0.001 72.145 8.79 A 34.069 34.069 0 0 1 82.373 23.887 A 49.659 49.659 0 0 1 84.743 34.132 L 66.579 34.132 A 29.528 29.528 0 0 0 64.029 25.705 Q 58.687 14.869 44.24 14.869 Q 31.789 14.869 25.307 23.842 A 30.176 30.176 0 0 0 21.198 32.131 Q 18.739 39.594 18.605 50.172 L 18.605 58.375 Q 18.605 75.661 25.893 85.219 A 23.451 23.451 0 0 0 42.992 94.627 A 32.48 32.48 0 0 0 46.144 94.777 A 49.272 49.272 0 0 0 53.301 94.295 Q 61.995 93.014 66.359 88.331 L 66.359 67.457 L 44.386 67.457 L 44.386 53.395 L 84.816 53.395 Z" id="0" vectorEffect="non-scaling-stroke"/>
				<path transform={`translate(${gap*1} 0)`} style={{transform: `${isOver ? `translateX(${dx+gap*1}px)` : ''}`, transition: `transform ${dur}s ${delay*3}s`}} d="M 173.586 108.107 L 164.87 83.278 L 123.561 83.278 L 114.919 108.107 L 95.656 108.107 L 135.939 1.466 L 152.565 1.466 L 192.921 108.107 L 173.586 108.107 Z M 144.215 24.098 L 128.761 68.336 L 159.67 68.336 L 144.215 24.098 Z" id="1" vectorEffect="non-scaling-stroke"/>
				<path transform={`translate(${gap*2} 0)`} style={{transform: `${isOver ? `translateX(${dx+gap*2}px)` : ''}`, transition: `transform ${dur}s ${delay*2}s`}} d="M 205.006 1.466 L 229.03 1.466 L 259.792 83.204 L 290.48 1.466 L 314.43 1.466 L 314.43 108.107 L 295.973 108.107 L 295.973 72.951 L 297.804 25.929 L 266.31 108.107 L 253.053 108.107 L 221.632 26.002 L 223.463 72.951 L 223.463 108.107 L 205.006 108.107 L 205.006 1.466 Z" id="2" vectorEffect="non-scaling-stroke"/>
				<path transform={`translate(${gap*3} 0)`} style={{transform: `${isOver ? `translateX(${dx+gap*3}px)` : ''}`, transition: `transform ${dur}s ${delay*1}s`}} d="M 398.659 45.851 L 398.659 60.499 L 354.86 60.499 L 354.86 93.312 L 406.056 93.312 L 406.056 108.107 L 336.33 108.107 L 336.33 1.466 L 405.544 1.466 L 405.544 16.408 L 354.86 16.408 L 354.86 45.851 L 398.659 45.851 Z" id="3" vectorEffect="non-scaling-stroke"/>
				<path transform={`translate(${gap*4} 0)`} style={{transform: `${isOver ? `translateX(${dx+gap*4}px)` : ''}`, transition: `transform ${dur}s ${delay*0}s`}} d="M 495.338 32.594 L 476.881 32.594 A 21.402 21.402 0 0 0 476.205 27.061 A 15.208 15.208 0 0 0 471.645 19.52 Q 467.213 15.523 459.557 14.908 A 36.122 36.122 0 0 0 456.667 14.796 A 34.196 34.196 0 0 0 451.205 15.204 Q 448.335 15.669 446.021 16.665 A 15.838 15.838 0 0 0 442.567 18.678 A 12.591 12.591 0 0 0 437.619 27.929 A 17.895 17.895 0 0 0 437.55 29.518 A 11.148 11.148 0 0 0 441.267 37.891 A 16.686 16.686 0 0 0 442.97 39.296 Q 448.39 43.214 460.841 46.913 A 117.49 117.49 0 0 1 469.157 49.704 Q 476.004 52.309 480.837 55.336 Q 487.751 59.665 491.281 65.164 A 24.141 24.141 0 0 1 491.896 66.176 A 26.222 26.222 0 0 1 495.06 75.512 A 34.129 34.129 0 0 1 495.412 80.494 A 28.003 28.003 0 0 1 493.593 90.771 A 25.334 25.334 0 0 1 485.194 101.698 A 35.282 35.282 0 0 1 473.155 107.603 Q 466.225 109.572 457.472 109.572 A 54.633 54.633 0 0 1 443.088 107.726 A 48.587 48.587 0 0 1 436.195 105.287 A 40.243 40.243 0 0 1 427.571 100.187 A 32.564 32.564 0 0 1 421.108 93.458 A 29.009 29.009 0 0 1 415.78 77.893 A 36.057 36.057 0 0 1 415.724 75.88 L 434.254 75.88 A 21.947 21.947 0 0 0 435.022 81.848 A 15.858 15.858 0 0 0 440.26 89.943 Q 446.266 94.923 457.472 94.923 A 38.156 38.156 0 0 0 462.79 94.578 Q 468.586 93.76 472.011 91.005 A 12.486 12.486 0 0 0 476.831 81.924 A 16.102 16.102 0 0 0 476.881 80.641 Q 476.881 73.61 471.938 69.801 A 24.391 24.391 0 0 0 468.584 67.683 Q 464.84 65.677 458.915 63.652 A 137.074 137.074 0 0 0 454.103 62.111 A 127.057 127.057 0 0 1 445.864 59.338 Q 438.594 56.592 433.595 53.468 A 37.34 37.34 0 0 1 425.909 47.202 A 25.17 25.17 0 0 1 419.02 29.591 A 25.596 25.596 0 0 1 427.357 10.232 A 33.497 33.497 0 0 1 429.53 8.351 A 37.166 37.166 0 0 1 444.442 1.327 Q 450.13 0.001 456.813 0.001 A 51.622 51.622 0 0 1 467.806 1.125 A 41.388 41.388 0 0 1 476.662 4.103 Q 485.378 8.204 490.358 15.785 Q 495.338 23.366 495.338 32.594 Z" id="4" vectorEffect="non-scaling-stroke"/>
			</g>
		</svg>
	)
}


